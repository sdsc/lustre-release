.TH llapi_ladvise 3 "2015 Dec 15" "Lustre User API"
.SH NAME
llapi_ladvise \- give IO advices/hints on a Lustre file to the server
.SH SYNOPSIS
.nf
.B #include <lustre/lustreapi.h>
.sp
.BI "int llapi_ladvise(int " fd ", unsigned long long " flags ", int " num_advise ", struct lu_ladvise *" ladvise ");"
.sp
.fi
.SH DESCRIPTION
.LP
.B llapi_ladvise()
gives advices to a file specified by the file descriptor
.IR fd .
.IR ladvise
points to an array that contains the information of the advices. The number
of advices is
.IR num_advise ,
which should be smaller than
.B MAX_NUM_LADVISE.
Each of these advises is given in
.I lu_ladvise
structure, which contains the following fields:
.PP
.in +4n
.nf
struct lu_ladvise {
    __u64 lla_advice;  /* Advice type */
    __u64 lla_start;   /* Start offset of file */
    __u64 lla_end;     /* End offset of file(not included) */
    __u64 lla_padding; /* Not used yet */
};
.fi
.in
.LP
In addition, zero or more flags can be
.RI bitwise-or 'd
in
.IR flags .
The full list of file creation flags and file status flags is as follows:
.TP
.B LF_ASYNC
Client return to userspace immediately after submitting ladvise RPCs, leaving
server threads to handle the advices asynchronously.
.PP
.SH RETURN VALUES
.PP
.B llapi_ladvise()
return 0 on success, or -1 if an error occurred (in which case, errno is set
appropriately).
.SH ERRORS
.TP 15
.SM ENOMEM
Insufficient memory to complete operation.
.TP
.SM EINVAL
One or more invalid arguments are given.
.TP
.SM EFAULT
memory region pointed by
.I ladvise
is not properly mapped.
.TP
.SM ENOTSUPP
Advice type is not supported.
.SH "SEE ALSO"
.BR lfs-ladvise (1),
.BR liblustreapi (7)
