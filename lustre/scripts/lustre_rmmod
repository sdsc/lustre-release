#!/bin/bash
#
# Takes a comma separated list of modules, and removes all dependent
# modules to the passed list. If the "-i" (inclusive) option is used,
# the list of modules is also removed. If the "-e" (exclusive) option is
# used, the list of modules is left intact. If a module cannot be
# unloaded (i.e. it's in use), an error is returned.
###############################################################################

RMMOD=rmmod
if [ `uname -r | cut -c 3` -eq 4 ]; then
	RMMOD="modprobe -r"
fi

unload_dep_modules_exclusive() {
	local MODULE=$1
	local DEPS="$(lsmod | awk '($1 == "'$MODULE'") { print $4 }')"
	for SUBMOD in `echo $DEPS | tr ',' ' '`; do
		unload_dep_modules_inclusive $SUBMOD || return 1
	done
	return 0
}

unload_dep_modules_inclusive() {
	local MODULE=$1

	# if $MODULE not loaded, return 0
	lsmod | egrep -q "^\<$MODULE\>" || return 0
	unload_dep_modules_exclusive $MODULE || return 1
	$RMMOD $MODULE || return 1
	return 0
}

exclusive=""
inclusive=""
while getopts "e:i:" opt; do
	case $opt in
		e) exclusive=$OPTARG ;;
		i) inclusive=$OPTARG ;;
	esac
done

for mod in `echo $exclusive | tr ',' ' '`; do
	unload_dep_modules_exclusive $mod || exit 1
done

for mod in `echo $inclusive | tr ',' ' '`; do
	unload_dep_modules_inclusive $mod || exit 1
done

exit 0
