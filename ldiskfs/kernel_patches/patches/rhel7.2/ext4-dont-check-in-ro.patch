--- linux-stage/fs/ext4/mballoc.c	2016-11-24 15:36:45.949768147 +0530
+++ linux-stage.orig/fs/ext4/mballoc.c	2016-11-24 16:12:20.339782472 +0530
@@ -3594,6 +3594,11 @@
	unsigned short max = EXT4_CLUSTERS_PER_GROUP(sb);
	unsigned short i, first, free = 0;

+#ifdef HAVE_CLEAR_RDONLY_ON_PUT
+	if (dev_check_rdonly(sb->s_bdev))
+		return 0;
+#endif
+
	i = mb_find_next_zero_bit(bitmap, max, 0);

	while (i < max) {
@@ -3969,6 +3974,10 @@
		bit = next + 1;
	}

+#ifdef HAVE_CLEAR_RDONLY_ON_PUT
+	if (dev_check_rdonly(sb->s_bdev))
+		goto add_free;
+#endif
	/* "free < pa->pa_free" means we maybe double alloc the same blocks,
	 * otherwise maybe leave some free blocks unavailable, no need to BUG.*/
	if ((free > pa->pa_free && !pa->pa_error) || (free < pa->pa_free)) {
@@ -3981,8 +3990,9 @@
	}
	/* do not verify if the file system is being umounted */
	BUG_ON(atomic_read(&sb->s_active) > 0 && pa->pa_free != free);
-	atomic_add(free, &sbi->s_mb_discarded);

+add_free:
+	atomic_add(free, &sbi->s_mb_discarded);
	return err;
 }
