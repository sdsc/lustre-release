diff --git a/fs/ext4/namei.c b/fs/ext4/namei.c
index b14034b..a56ca23 100644
--- a/fs/ext4/namei.c
+++ b/fs/ext4/namei.c
@@ -2018,7 +2018,8 @@ int __ext4_add_entry(handle_t *handle, struct dentry *dentry,
 		    memcmp(dentry->d_name.name, "..", 2) == 0)
 			return ext4_update_dotdot(handle, dentry, inode);
 		retval = ext4_dx_add_entry(handle, dentry, inode, lck);
-		if (!retval || (retval != ERR_BAD_DX_DIR))
+		if (!retval || (retval != ERR_BAD_DX_DIR) ||
+		    (retval != -ENOBUFS))
 			return retval;
 		ext4_htree_safe_relock(lck);
 		ext4_clear_inode_flag(dir, EXT4_INODE_INDEX);
@@ -2059,7 +2060,7 @@ EXPORT_SYMBOL(__ext4_add_entry);
 static int ext4_dx_add_entry(handle_t *handle, struct dentry *dentry,
 			     struct inode *inode, struct htree_lock *lck)
 {
-	struct dx_frame frames[EXT4_HTREE_LEVEL], *frame;
+	struct dx_frame frames[EXT4_HTREE_LEVEL], *frame, *frame1;
 	struct dx_entry *entries, *at;
 	struct dx_hash_info hinfo;
 	struct buffer_head *bh;
@@ -2068,6 +2069,9 @@ static int ext4_dx_add_entry(handle_t *handle, struct dentry *dentry,
 	struct ext4_dir_entry_2 *de;
 	int restart;
 	int err;
+	u64 max_dir_size = EXT4_BLOCK_SIZE(sb);
+	u64 size1, size2;
+	bool ret_warn = false;
 
 again:
 	restart = 0;
@@ -2088,6 +2092,31 @@ again:
 	/* Block full, should compress but for now just split */
 	dxtrace(printk(KERN_DEBUG "using %u of %u node entries\n",
 		       dx_get_count(entries), dx_get_limit(entries)));
+
+	if (frame - frames + 1 < ext4_dir_htree_level(sb))
+		goto skip;
+	frame1 = frame;
+	if (EXT4_SB(dir->i_sb)->s_max_dir_size)
+		max_dir_size = EXT4_SB(dir->i_sb)->s_max_dir_size;
+	else
+		while (frame1 >= frames) {
+			max_dir_size *= dx_get_limit(frame1->entries);
+			if (frame1 == frames)
+				break;
+			frame1--;
+		}
+	/* With hash tree growing, it is easy to hit ENOSPC,but
+	 * it is hard to predict when it will happen. let's give
+	 * administrators warning when reaching 50% and 75% of limit. */
+	max_dir_size = max_dir_size / 4 * 3;
+	size1 = max_dir_size / 2;
+	size2 = max_dir_size / 4 * 3;
+	if ((dir->i_size >= size1 &&
+	     dir->i_size - size1 < EXT4_BLOCK_SIZE(sb))
+	    || (dir->i_size >= size2 &&
+		dir->i_size - size2 < EXT4_BLOCK_SIZE(sb)))
+		ret_warn = true;
+skip:
 	/* Need to split index? */
 	if (dx_get_count(entries) == dx_get_limit(entries)) {
 		ext4_lblk_t newblock;
@@ -2119,7 +2148,7 @@ again:
 					 "reach max htree level :%d",
 					 dir->i_ino, levels);
 			if (ext4_dir_htree_level(sb) < EXT4_HTREE_LEVEL) {
-				ext4_warning(sb, "Large directory feature is"
+				ext4_warning(sb, "Large directory feature is "
 						 "not enabled on this "
 						 "filesystem");
 			}
@@ -2248,6 +2277,8 @@ cleanup:
 	 * repeat dx_probe() to find out valid htree-path */
 	if (restart && err == 0)
 		goto again;
+	if (err == 0 && ret_warn)
+		err = -ENOBUFS;
 	return err;
 }
 
