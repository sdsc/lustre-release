diff -Naur linux-2.6.32-504.30.3.el6.orig/fs/ext4/ext4.h linux-2.6.32-504.30.3.el6/fs/ext4/ext4.h
--- linux-2.6.32-504.30.3.el6.orig/fs/ext4/ext4.h	2016-05-28 14:07:11.998006636 +0800
+++ linux-2.6.32-504.30.3.el6/fs/ext4/ext4.h	2016-05-28 14:09:53.446997712 +0800
@@ -2010,6 +2010,8 @@
 				ext4_fsblk_t n_blocks_count);
 
 /* super.c */
+#define HAVE_EXT4_COMMIT_SUPER
+extern int ext4_commit_super(struct super_block *sb, int sync);
 extern void *ext4_kvmalloc(size_t size, gfp_t flags);
 extern void *ext4_kvzalloc(size_t size, gfp_t flags);
 extern void ext4_kvfree(void *ptr);
diff -Naur linux-2.6.32-504.30.3.el6.orig/fs/ext4/super.c linux-2.6.32-504.30.3.el6/fs/ext4/super.c
--- linux-2.6.32-504.30.3.el6.orig/fs/ext4/super.c	2016-05-28 14:07:11.997006740 +0800
+++ linux-2.6.32-504.30.3.el6/fs/ext4/super.c	2016-05-28 14:08:50.052000656 +0800
@@ -61,7 +61,6 @@
 
 static int ext4_load_journal(struct super_block *, struct ext4_super_block *,
 			     unsigned long journal_devnum);
-static int ext4_commit_super(struct super_block *sb, int sync);
 static void ext4_mark_recovery_complete(struct super_block *sb,
 					struct ext4_super_block *es);
 static void ext4_clear_journal_err(struct super_block *sb,
@@ -4100,7 +4099,7 @@
 	return 0;
 }
 
-static int ext4_commit_super(struct super_block *sb, int sync)
+int ext4_commit_super(struct super_block *sb, int sync)
 {
 	struct ext4_super_block *es = EXT4_SB(sb)->s_es;
 	struct buffer_head *sbh = EXT4_SB(sb)->s_sbh;
@@ -4167,6 +4166,7 @@
 	}
 	return error;
 }
+EXPORT_SYMBOL(ext4_commit_super);
 
 /*
  * Have we just finished recovery?  If so, and if we are mounting (or
