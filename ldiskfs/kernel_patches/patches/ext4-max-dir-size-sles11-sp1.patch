Index: linux-2.6.27.21-0.1/fs/ext4/ialloc.c
===================================================================
--- linux-2.6.27.21-0.1.orig/fs/ext4/ialloc.c	2009-07-07 14:35:55.000000000 +0530
+++ linux-2.6.27.21-0.1/fs/ext4/ialloc.c	2009-07-07 14:38:17.000000000 +0530
@@ -700,11 +700,14 @@
 	sb = dir->i_sb;
	ngroups = ext4_get_groups_count(sb);
	trace_ext4_request_inode(dir, mode);
+	sbi = EXT4_SB(sb);
+	if (sbi->s_max_dir_size > 0 && i_size_read(dir) >= sbi->s_max_dir_size)
+		return ERR_PTR(-EFBIG);
+
 	inode = new_inode(sb);
 	if (!inode)
 		return ERR_PTR(-ENOMEM);
 	ei = EXT4_I(inode);
-	sbi = EXT4_SB(sb);
 
 	if (!goal)

Index: linux-2.6.27.21-0.1/fs/ext4/super.c
===================================================================
--- linux-2.6.27.21-0.1.orig/fs/ext4/super.c	2009-07-07 14:38:06.000000000 +0530
+++ linux-2.6.27.21-0.1/fs/ext4/super.c	2009-07-07 14:38:41.000000000 +0530
@@ -71,6 +72,7 @@
 EXT4_RW_ATTR_SBI_UI(mb_stream_req, s_mb_stream_request);
 EXT4_RW_ATTR_SBI_UI(mb_group_prealloc, s_mb_group_prealloc);
 EXT4_RW_ATTR_SBI_UI(max_writeback_mb_bump, s_max_writeback_mb_bump);
+EXT4_RW_ATTR_SBI_UI(max_dir_size, s_max_dir_size);
 
 static struct attribute *ext4_attrs[] = {
	ATTR_LIST(delayed_allocation_blocks),
@@ -603,6 +606,7 @@
	ATTR_LIST(mb_stream_req),
	ATTR_LIST(mb_group_prealloc),
	ATTR_LIST(max_writeback_mb_bump),
+	ATTR_LIST(max_dir_size),
	NULL,
 };
 
Index: linux-2.6.27.21-0.1/fs/ext4/ext4_sb.h
===================================================================
--- linux-2.6.27.21-0.1.orig/fs/ext4/ext4.h	2009-07-07 14:36:58.000000000 +0530
+++ linux-2.6.27.21-0.1/fs/ext4/ext4.h	2009-07-07 14:38:17.000000000 +0530
@@ -119,6 +119,7 @@
 	/* where last allocation was done - for stream allocation */
 	unsigned long s_mb_last_group;
 	unsigned long s_mb_last_start;
+	unsigned long s_max_dir_size;
 
	/* stats for buddy allocator */
	spinlock_t s_mb_pa_lock;
