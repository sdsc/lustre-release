Index: linux-stage/fs/ext4/super.c
===================================================================
--- linux-stage.orig/fs/ext4/super.c	2011-05-20 11:01:37.000000000 +0300
+++ linux-stage/fs/ext4/super.c	2011-05-20 11:01:44.000000000 +0300
@@ -1515,6 +1517,7 @@ enum {
	Opt_stripe, Opt_delalloc, Opt_nodelalloc,
 	Opt_inode_readahead_blks, Opt_journal_ioprio,
 	Opt_mballoc, Opt_bigendian_extents, Opt_force_over_128tb,
+	Opt_extents, Opt_noextents,
 	Opt_discard, Opt_nodiscard,
	Opt_init_inode_table, Opt_noinit_inode_table,
 };
@@ -1589,6 +1592,8 @@ static const match_table_t tokens = {
	{Opt_noauto_da_alloc, "noauto_da_alloc"},
	{Opt_bigendian_extents, "bigendian_extents"},
 	{Opt_mballoc, "mballoc"},
+	{Opt_extents, "extents"},
+	{Opt_noextents, "noextents"},
 	{Opt_discard, "discard"},
 	{Opt_nodiscard, "nodiscard"},
	{Opt_init_inode_table, "init_itable=%u"},
@@ -2039,6 +2045,22 @@ set_qf_format:
 		case Opt_force_over_128tb:
 			force_over_128tb = 1;
 			break;
+		case Opt_extents:
+			if (!EXT4_HAS_INCOMPAT_FEATURE(sb,
+					EXT4_FEATURE_INCOMPAT_EXTENTS)) {
+				ext4_msg(sb, KERN_ERR, "extents feature not "
+					 "enabled on this filesystem, use tune2fs");
+				return 0;
+			}
+			break;
+		case Opt_noextents:
+			if (EXT4_HAS_INCOMPAT_FEATURE(sb,
+					EXT4_FEATURE_INCOMPAT_EXTENTS)) {
+				ext4_msg(sb, KERN_ERR, "extents feature enabled"
+					" on this filesystem, use tune2fs");
+				return 0;
+			}
+			break;
 		default:
 			ext4_msg(sb, KERN_ERR,
 			       "Unrecognized mount option \"%s\" "
