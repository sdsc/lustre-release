Index: linux-stage/fs/ext4/super.c
===================================================================
--- linux-stage.orig/fs/ext4/super.c	2013-02-26 14:31:44.636478600 -0500
+++ linux-stage/fs/ext4/super.c	2013-02-26 14:37:48.760364212 -0500
@@ -61,6 +61,8 @@
 static struct mutex ext4_li_mtx;
 static struct ext4_features *ext4_feat;
 
+static int force_over_128tb;
+
 static int ext4_load_journal(struct super_block *, struct ext4_super_block *,
 			     unsigned long journal_devnum);
 static int ext4_commit_super(struct super_block *sb, int sync);
@@ -1180,9 +1182,9 @@
 	Opt_stripe, Opt_delalloc, Opt_nodelalloc,
 	Opt_block_validity, Opt_noblock_validity,
 	Opt_inode_readahead_blks, Opt_journal_ioprio,
-	Opt_mballoc, Opt_bigendian_extents,
-	Opt_discard, Opt_nodiscard,
-	Opt_init_inode_table, Opt_noinit_inode_table,
+	Opt_dioread_nolock, Opt_dioread_lock,
+	Opt_mballoc, Opt_bigendian_extents, Opt_force_over_128tb,
+	Opt_discard, Opt_nodiscard, Opt_init_itable, Opt_noinit_itable,
 };
 
 static const match_table_t tokens = {
@@ -1253,12 +1255,13 @@
 	{Opt_auto_da_alloc, "auto_da_alloc"},
 	{Opt_noauto_da_alloc, "noauto_da_alloc"},
 	{Opt_bigendian_extents, "bigendian_extents"},
+	{Opt_force_over_128tb, "force_over_128tb"},
 	{Opt_mballoc, "mballoc"},
 	{Opt_discard, "discard"},
 	{Opt_nodiscard, "nodiscard"},
-	{Opt_init_inode_table, "init_itable=%u"},
-	{Opt_init_inode_table, "init_itable"},
-	{Opt_noinit_inode_table, "noinit_itable"},
+	{Opt_init_itable, "init_itable=%u"},
+	{Opt_init_itable, "init_itable"},
+	{Opt_noinit_itable, "noinit_itable"},
 	{Opt_err, NULL},
 };
 
@@ -1704,7 +1707,7 @@
 		case Opt_nodiscard:
 			clear_opt(sbi->s_mount_opt, DISCARD);
 			break;
-		case Opt_init_inode_table:
+		case Opt_init_itable:
 			set_opt(sbi->s_mount_opt, INIT_INODE_TABLE);
 			if (args[0].from) {
 				if (match_int(&args[0], &option))
@@ -1715,11 +1718,14 @@
 				return 0;
 			sbi->s_li_wait_mult = option;
 			break;
-		case Opt_noinit_inode_table:
+		case Opt_noinit_itable:
 			clear_opt(sbi->s_mount_opt, INIT_INODE_TABLE);
 			break;
 		case Opt_mballoc:
 			break;
+		case Opt_force_over_128tb:
+			force_over_128tb = 1;
+			break;
 		default:
 			ext4_msg(sb, KERN_ERR,
 			       "Unrecognized mount option \"%s\" "
@@ -3134,6 +3140,16 @@
 		goto failed_mount;
 	}
 
+	if (ext4_blocks_count(es) > (8ULL << 32)) {
+		if (force_over_128tb == 0) {
+			printk(KERN_ERR "EXT4-fs does not support filesystems "
+			       "greater than 128TB and can cause data corruption."
+			       "Use \"force_over_128tb\" mount option to override."
+			       "\n");
+			goto failed_mount;
+		}
+	}
+
 	if (EXT4_BLOCKS_PER_GROUP(sb) == 0)
 		goto cantfind_ext4;
 
