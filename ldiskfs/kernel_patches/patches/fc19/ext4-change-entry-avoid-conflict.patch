--- a/fs/ext4/xattr.c	2013-08-15 00:37:01.799151843 +0800
+++ b/fs/ext4/xattr.c	2013-08-16 01:49:46.865745622 +0800
@@ -660,7 +660,7 @@ ext4_xattr_set_entry(struct ext4_xattr_i
 		if (!i->value) {
 			/* Remove the old name. */
 			size_t size = EXT4_XATTR_LEN(name_len);
-			last = ENTRY((void *)last - size);
+			last = XA_ENTRY((void *)last - size);
 			memmove(s->here, (void *)s->here + size,
 				(void *)last - (void *)s->here + sizeof(__u32));
 			memset(last, 0, size);
@@ -794,9 +794,9 @@ ext4_xattr_block_set(handle_t *handle, s
 			if (s->base == NULL)
 				goto cleanup;
 			memcpy(s->base, BHDR(bs->bh), bs->bh->b_size);
-			s->first = ENTRY(header(s->base)+1);
+			s->first = XA_ENTRY(header(s->base)+1);
 			header(s->base)->h_refcount = cpu_to_le32(1);
-			s->here = ENTRY(s->base + offset);
+			s->here = XA_ENTRY(s->base + offset);
 			s->end = s->base + bs->bh->b_size;
 		}
 	} else {
@@ -809,8 +809,8 @@ ext4_xattr_block_set(handle_t *handle, s
 		header(s->base)->h_magic = cpu_to_le32(EXT4_XATTR_MAGIC);
 		header(s->base)->h_blocks = cpu_to_le32(1);
 		header(s->base)->h_refcount = cpu_to_le32(1);
-		s->first = ENTRY(header(s->base)+1);
-		s->here = ENTRY(header(s->base)+1);
+		s->first = XA_ENTRY(header(s->base)+1);
+		s->here = XA_ENTRY(header(s->base)+1);
 		s->end = s->base + sb->s_blocksize;
 	}
 
@@ -1529,8 +1529,8 @@ ext4_xattr_cmp(struct ext4_xattr_header
 {
 	struct ext4_xattr_entry *entry1, *entry2;
 
-	entry1 = ENTRY(header1+1);
-	entry2 = ENTRY(header2+1);
+	entry1 = XA_ENTRY(header1+1);
+	entry2 = XA_ENTRY(header2+1);
 	while (!IS_LAST_ENTRY(entry1)) {
 		if (IS_LAST_ENTRY(entry2))
 			return 1;
@@ -1655,7 +1655,7 @@ static void ext4_xattr_rehash(struct ext
 	__u32 hash = 0;
 
 	ext4_xattr_hash_entry(header, entry);
-	here = ENTRY(header+1);
+	here = XA_ENTRY(header+1);
 	while (!IS_LAST_ENTRY(here)) {
 		if (!here->e_hash) {
 			/* Block is not shared if an entry's hash value == 0 */
--- a/fs/ext4/xattr.h	2013-08-15 00:37:01.043152778 +0800
+++ b/fs/ext4/xattr.h	2013-08-16 01:51:28.386477922 +0800
@@ -67,8 +67,8 @@ struct ext4_xattr_entry {
 #define IFIRST(hdr) ((struct ext4_xattr_entry *)((hdr)+1))
 
 #define BHDR(bh) ((struct ext4_xattr_header *)((bh)->b_data))
-#define ENTRY(ptr) ((struct ext4_xattr_entry *)(ptr))
-#define BFIRST(bh) ENTRY(BHDR(bh)+1)
+#define XA_ENTRY(ptr) ((struct ext4_xattr_entry *)(ptr))
+#define BFIRST(bh) XA_ENTRY(BHDR(bh)+1)
 #define IS_LAST_ENTRY(entry) (*(__u32 *)(entry) == 0)
 
 #define EXT4_ZERO_XATTR_VALUE ((void *)-1)
