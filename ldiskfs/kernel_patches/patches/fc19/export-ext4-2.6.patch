Index: linux-3.10.9-200.fc17.x86_64/fs/ext4/super.c
===================================================================
--- linux-3.10.9-200.fc17.x86_64.orig/fs/ext4/super.c
+++ linux-3.10.9-200.fc17.x86_64/fs/ext4/super.c
@@ -4112,6 +4112,8 @@ out_free_orig:
 	return err ? err : ret;
 }
 
+EXPORT_SYMBOL(ext4_force_commit);
+
 /*
  * Setup any per-fs journal parameters now.  We'll do this both on
  * initial mount, once the journal has been initialised but before we've
@@ -5418,6 +5420,9 @@ static void __exit ext4_exit_fs(void)
 	ext4_exit_es();
 }
 
+EXPORT_SYMBOL(ext4_bread);
+EXPORT_SYMBOL(__ext4_journal_stop);
+
 MODULE_AUTHOR("Remy Card, Stephen Tweedie, Andrew Morton, Andreas Dilger, Theodore Ts'o and others");
 MODULE_DESCRIPTION("Fourth Extended Filesystem");
 MODULE_LICENSE("GPL");
Index: linux-3.10.9-200.fc17.x86_64/fs/ext4/ext4.h
===================================================================
--- linux-3.10.9-200.fc17.x86_64.orig/fs/ext4/ext4.h
+++ linux-3.10.9-200.fc17.x86_64/fs/ext4/ext4.h
@@ -2598,6 +2598,8 @@ struct ext4_extent;
 
 extern int ext4_ext_tree_init(handle_t *handle, struct inode *);
 extern int ext4_ext_writepage_trans_blocks(struct inode *, int);
+extern struct buffer_head *ext4_read_inode_bitmap(struct super_block *sb,
+						  ext4_group_t block_group);
 extern int ext4_ext_index_trans_blocks(struct inode *inode, int nrblocks,
 				       int chunk);
 extern int ext4_ext_map_blocks(handle_t *handle, struct inode *inode,
Index: linux-3.10.9-200.fc17.x86_64/fs/ext4/ialloc.c
===================================================================
--- linux-3.10.9-200.fc17.x86_64.orig/fs/ext4/ialloc.c
+++ linux-3.10.9-200.fc17.x86_64/fs/ext4/ialloc.c
@@ -111,7 +111,7 @@ void ext4_end_bitmap_read(struct buffer_
  *
  * Return buffer_head of bitmap on success or NULL.
  */
-static struct buffer_head *
+struct buffer_head *
 ext4_read_inode_bitmap(struct super_block *sb, ext4_group_t block_group)
 {
 	struct ext4_group_desc *desc;
@@ -191,6 +191,7 @@ verify:
 	set_buffer_verified(bh);
 	return bh;
 }
+EXPORT_SYMBOL(ext4_read_inode_bitmap);
 
 /*
  * NOTE! When we get the inode, we're the only people
Index: linux-3.10.9-200.fc17.x86_64/fs/ext4/extents.c
===================================================================
--- linux-3.10.9-200.fc17.x86_64.orig/fs/ext4/extents.c
+++ linux-3.10.9-200.fc17.x86_64/fs/ext4/extents.c
@@ -4733,3 +4733,5 @@ int ext4_fiemap(struct inode *inode, str
 
 	return error;
 }
+
+EXPORT_SYMBOL(ext4_mark_inode_dirty);
