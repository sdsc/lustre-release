diff -ur linux-stage.orig/fs/ext4/ext4.h linux-stage/fs/ext4/ext4.h
--- linux-stage.orig/fs/ext4/ext4.h	2011-05-17 07:58:40.000000000 -0400
+++ linux-stage/fs/ext4/ext4.h	2011-05-17 08:00:02.000000000 -0400
@@ -39,6 +39,8 @@
 /* Has been moved to linux/magic.h but we need it for Lustre */
 #define EXT4_SUPER_MAGIC	0xEF53
 
+#define USE_I_FS_VERSION
+
 /*
  * Define EXT4FS_DEBUG to produce debug messages
  */
@@ -66,6 +68,8 @@
 #define ext4_debug(f, a...)	do {} while (0)
 #endif
 
+#define HAVE_DISK_INODE_VERSION
+
 /* data type for block offset of block group */
 typedef int ext4_grpblk_t;
 
@@ -623,6 +627,8 @@
 	__u16 i_extra_isize;
 
 	spinlock_t i_block_reservation_lock;
+
+	__u64 i_fs_version;
 };
 
 /*
diff -ur linux-stage.orig/fs/ext4/ialloc.c linux-stage/fs/ext4/ialloc.c
--- linux-stage.orig/fs/ext4/ialloc.c	2011-05-17 07:58:40.000000000 -0400
+++ linux-stage/fs/ext4/ialloc.c	2011-05-17 07:59:42.000000000 -0400
@@ -889,6 +889,7 @@
 	ei->i_file_acl = 0;
 	ei->i_dtime = 0;
 	ei->i_block_group = group;
+	ei->i_fs_version = 0;
 
 	ext4_set_inode_flags(inode);
 	if (IS_DIRSYNC(inode))
diff -ur linux-stage.orig/fs/ext4/inode.c linux-stage/fs/ext4/inode.c
--- linux-stage.orig/fs/ext4/inode.c	2011-05-17 07:58:40.000000000 -0400
+++ linux-stage/fs/ext4/inode.c	2011-05-17 07:59:42.000000000 -0400
@@ -4220,10 +4220,10 @@
 	EXT4_INODE_GET_XTIME(i_atime, inode, raw_inode);
 	EXT4_EINODE_GET_XTIME(i_crtime, ei, raw_inode);
 
-	inode->i_version = le32_to_cpu(raw_inode->i_disk_version);
+	ei->i_fs_version = le32_to_cpu(raw_inode->i_disk_version);
 	if (EXT4_INODE_SIZE(inode->i_sb) > EXT4_GOOD_OLD_INODE_SIZE) {
 		if (EXT4_FITS_IN_INODE(raw_inode, ei, i_version_hi))
-			inode->i_version |=
+			ei->i_fs_version |=
 			(__u64)(le32_to_cpu(raw_inode->i_version_hi)) << 32;
 	}
 
@@ -4403,11 +4403,11 @@
 	} else for (block = 0; block < EXT4_N_BLOCKS; block++)
 		raw_inode->i_block[block] = ei->i_data[block];
 
-	raw_inode->i_disk_version = cpu_to_le32(inode->i_version);
+	raw_inode->i_disk_version = cpu_to_le32(ei->i_fs_version);
 	if (ei->i_extra_isize) {
 		if (EXT4_FITS_IN_INODE(raw_inode, ei, i_version_hi))
 			raw_inode->i_version_hi =
-			cpu_to_le32(inode->i_version >> 32);
+			cpu_to_le32(ei->i_fs_version >> 32);
 		raw_inode->i_extra_isize = cpu_to_le16(ei->i_extra_isize);
 	}
 
