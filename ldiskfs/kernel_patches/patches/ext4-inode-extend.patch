Index: linux-stage/fs/ext4/ext4.h
===================================================================
--- linux-stage.orig/fs/ext4/ext4.h	2012-07-30 13:40:05.000000000 +0800
+++ linux-stage/fs/ext4/ext4.h	2012-07-30 14:23:09.000000000 +0800
@@ -555,7 +555,7 @@
 	__le32	i_generation;	/* File version (for NFS) */
 	__le32	i_file_acl_lo;	/* File ACL */
 	__le32	i_size_high;
-	__le32	i_obso_faddr;	/* Obsoleted fragment address */
+	__le32	i_idle_blocks;
 	union {
 		struct {
 			__le16	l_i_blocks_high; /* were l_i_reserved1 */
@@ -819,6 +819,7 @@
 	tid_t i_datasync_tid;
 
 	__u64 i_fs_version;
+	ext4_lblk_t	i_idle_blocks;
 };
 
 #ifndef O_32BITHASH
Index: linux-stage/fs/ext4/ialloc.c
===================================================================
--- linux-stage.orig/fs/ext4/ialloc.c	2012-07-30 13:40:05.000000000 +0800
+++ linux-stage/fs/ext4/ialloc.c	2012-07-30 13:40:06.000000000 +0800
@@ -1032,6 +1032,7 @@
 	ei->i_block_group = group;
 	ei->i_last_alloc_group = ~0;
 	ei->i_fs_version = 0;
+	ei->i_idle_blocks = 0;
 
 	ext4_set_inode_flags(inode);
 	if (IS_DIRSYNC(inode))
Index: linux-stage/fs/ext4/inode.c
===================================================================
--- linux-stage.orig/fs/ext4/inode.c	2012-07-30 13:40:05.000000000 +0800
+++ linux-stage/fs/ext4/inode.c	2012-07-30 13:40:06.000000000 +0800
@@ -5123,6 +5123,7 @@
 	if (EXT4_HAS_INCOMPAT_FEATURE(sb, EXT4_FEATURE_INCOMPAT_64BIT))
 		ei->i_file_acl |=
 			((__u64)le16_to_cpu(raw_inode->i_file_acl_high)) << 32;
+	ei->i_idle_blocks = le32_to_cpu(raw_inode->i_idle_blocks);
 	inode->i_size = ext4_isize(sb, raw_inode);
 	ei->i_disksize = inode->i_size;
 #ifdef CONFIG_QUOTA
@@ -5364,6 +5365,7 @@
 		raw_inode->i_file_acl_high =
 			cpu_to_le16(ei->i_file_acl >> 32);
 	raw_inode->i_file_acl_lo = cpu_to_le32(ei->i_file_acl);
+	raw_inode->i_idle_blocks = cpu_to_le32(ei->i_idle_blocks);
 	ext4_isize_set(raw_inode, ei->i_disksize);
 	if (ei->i_disksize > 0x7fffffffULL) {
 		struct super_block *sb = inode->i_sb;
