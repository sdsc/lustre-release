Index: linux-3.0.101-0.5/fs/ext4/super.c
===================================================================
--- linux-3.0.101-0.5.orig/fs/ext4/super.c
+++ linux-3.0.101-0.5/fs/ext4/super.c
@@ -1369,6 +1371,7 @@ enum {
 	Opt_inode_readahead_blks, Opt_journal_ioprio,
 	Opt_dioread_nolock, Opt_dioread_lock,
 	Opt_mballoc, Opt_bigendian_extents, Opt_force_over_128tb,
+	Opt_extents, Opt_noextents,
 	Opt_discard, Opt_nodiscard, Opt_init_itable, Opt_noinit_itable,
 };
 
@@ -1446,6 +1449,8 @@ static const match_table_t tokens = {
 	{Opt_bigendian_extents, "bigendian_extents"},
 	{Opt_force_over_128tb, "force_over_128tb"},
 	{Opt_mballoc, "mballoc"},
+	{Opt_extents, "extents"},
+	{Opt_noextents, "noextents"},
 	{Opt_discard, "discard"},
 	{Opt_nodiscard, "nodiscard"},
 	{Opt_init_itable, "init_itable=%u"},
@@ -1953,6 +1959,22 @@ set_qf_format:
 		case Opt_force_over_128tb:
 			force_over_128tb = 1;
 			break;
+		case Opt_extents:
+			if (!EXT4_HAS_INCOMPAT_FEATURE(sb,
+					EXT4_FEATURE_INCOMPAT_EXTENTS)) {
+				ext4_error(sb, "extents feature not enabled "
+					       "on this filesystem, use tune2fs");
+				return 0;
+			}
+			break;
+		case Opt_noextents:
+			if (EXT4_HAS_INCOMPAT_FEATURE(sb,
+					EXT4_FEATURE_INCOMPAT_EXTENTS)) {
+				ext4_error(sb, "extents feature has enabled "
+					       "on this filesystem, use tune2fs");
+				return 0;
+			}
+			break;
 		default:
 			ext4_msg(sb, KERN_ERR,
 			       "Unrecognized mount option \"%s\" "
