Index: linux-2.6.32-220.23.1.el6/fs/ext4/mballoc.c
===================================================================
--- linux-2.6.32-220.23.1.el6.orig/fs/ext4/mballoc.c	2012-10-10 13:35:02.000000000 +0400
+++ linux-2.6.32-220.23.1.el6/fs/ext4/mballoc.c	2012-10-25 15:06:56.000000000 +0400
@@ -2282,6 +2282,53 @@
 	.release	= seq_release,
 };
 
+#define EXT4_MB_MAX_INPUT_STRING_SIZE 32
+
+static int ext4_mb_last_group_write(struct file *file, const char *buffer,
+				    unsigned long count, void *data)
+{
+	char dummy[EXT4_MB_MAX_INPUT_STRING_SIZE + 1];
+	struct super_block *sb = data;
+	struct ext4_sb_info *sbi = EXT4_SB(sb);
+	unsigned long val;
+	char *end;
+
+	if (count > EXT4_MB_MAX_INPUT_STRING_SIZE)
+		return -EINVAL;
+	if (copy_from_user(dummy, buffer, count))
+		return -EFAULT;
+	dummy[count] = '\0';
+	val = simple_strtoul(dummy, &end, 0);
+	if (dummy == end)
+		return -EINVAL;
+	if (val >= ext4_get_groups_count(sb))
+		return -ERANGE;
+	spin_lock(&sbi->s_md_lock);
+	sbi->s_mb_last_group = val;
+	sbi->s_mb_last_start = 0;
+	spin_unlock(&sbi->s_md_lock);
+	return count;
+}
+
+static int ext4_mb_last_group_read(char *page, char **start, off_t off, int count,
+				   int *eof, void *data)
+{
+	struct super_block *sb = data;
+	struct ext4_sb_info *sbi = EXT4_SB(sb);
+
+	*eof = 1;
+	return snprintf(page, count, "%ld\n", sbi->s_mb_last_group);
+}
+
+static int ext4_mb_last_start_read(char *page, char **start, off_t off, int count,
+				   int *eof, void *data)
+{
+	struct super_block *sb = data;
+	struct ext4_sb_info *sbi = EXT4_SB(sb);
+
+	*eof = 1;
+	return snprintf(page, count, "%ld\n", sbi->s_mb_last_start);
+}
 
 /* Create and initialize ext4_group_info data for the given group. */
 int ext4_mb_add_groupinfo(struct super_block *sb, ext4_group_t group,
@@ -2590,6 +2637,22 @@
 			p->read_proc = ext4_mb_prealloc_table_proc_read;
 			p->write_proc = ext4_mb_prealloc_table_proc_write;
 		}
+
+		p = create_proc_entry("mb_last_group", S_IFREG |
+				S_IRUGO | S_IWUSR, sbi->s_proc);
+		if (p) {
+			p->data = sb;
+			p->write_proc = ext4_mb_last_group_write;
+			p->read_proc = ext4_mb_last_group_read;
+		}
+
+		p = create_proc_entry("mb_last_start", S_IFREG |
+				S_IRUGO , sbi->s_proc);
+		if (p) {
+			p->data = sb;
+			p->write_proc = NULL;
+			p->read_proc = ext4_mb_last_start_read;
+		}
 	}
 
 	return 0;
@@ -2673,6 +2736,8 @@
 	free_percpu(sbi->s_locality_groups);
 	if (sbi->s_proc) {
 		remove_proc_entry("mb_groups", sbi->s_proc);
+		remove_proc_entry("mb_last_group", sbi->s_proc);
+		remove_proc_entry("mb_last_start", sbi->s_proc);
 		remove_proc_entry(EXT4_MB_PREALLOC_TABLE, sbi->s_proc);
 	}
 
