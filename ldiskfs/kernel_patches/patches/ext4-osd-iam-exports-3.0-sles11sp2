---
 fs/ext4/ext4.h  |    3 +++
 fs/ext4/hash.c  |    2 ++
 fs/ext4/namei.c |    7 ++++---
 fs/ext4/super.c |    1 +
 4 files changed, 10 insertions(+), 3 deletions(-)

--- a/fs/ext4/ext4.h
+++ b/fs/ext4/ext4.h
@@ -1891,6 +1891,9 @@ extern struct buffer_head * ext4_find_en
 #define ll_ext4_find_entry(inode, dentry, res_dir) ext4_find_entry(inode, &(dentry)->d_name, res_dir)
 extern int ext4_add_dot_dotdot(handle_t *handle, struct inode *dir,
 			       struct inode *inode);
+extern struct buffer_head *ext4_append(handle_t *handle,
+				       struct inode *inode,
+				       ext4_lblk_t *block, int *err);
 extern int ext4_orphan_add(handle_t *, struct inode *);
 extern int ext4_orphan_del(handle_t *, struct inode *);
 extern int ext4_htree_fill_tree(struct file *dir_file, __u32 start_hash,
--- a/fs/ext4/hash.c
+++ b/fs/ext4/hash.c
@@ -9,6 +9,7 @@
  * License.
  */

+#include <linux/module.h>
 #include <linux/fs.h>
 #include <linux/jbd2.h>
 #include <linux/cryptohash.h>
@@ -206,3 +207,4 @@ int ext4fs_dirhash(const char *name, int
 	hinfo->minor_hash = minor_hash;
 	return 0;
 }
+EXPORT_SYMBOL(ext4fs_dirhash);
--- a/fs/ext4/namei.c
+++ b/fs/ext4/namei.c
@@ -50,9 +50,9 @@
 #define NAMEI_RA_SIZE	     (NAMEI_RA_CHUNKS * NAMEI_RA_BLOCKS)
 #define NAMEI_RA_INDEX(c,b)  (((c) * NAMEI_RA_BLOCKS) + (b))

-static struct buffer_head *ext4_append(handle_t *handle,
-					struct inode *inode,
-					ext4_lblk_t *block, int *err)
+struct buffer_head *ext4_append(handle_t *handle,
+				struct inode *inode,
+				ext4_lblk_t *block, int *err)
 {
 	struct buffer_head *bh;
 	struct ext4_inode_info *ei = EXT4_I(inode);
@@ -77,6 +77,7 @@ static struct buffer_head *ext4_append(h
 	up(&ei->i_append_sem);
 	return bh;
 }
+EXPORT_SYMBOL(ext4_append);

 #ifndef assert
 #define assert(test) J_ASSERT(test)
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -558,6 +558,7 @@ void __ext4_std_error(struct super_block

 	ext4_handle_error(sb);
 }
+EXPORT_SYMBOL(__ext4_std_error);

 /*
  * ext4_abort is a much stronger failure handler than ext4_error.  The
